plugins {
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
}

group = 'com.glencoesoftware.omero'
version = '0.5.1-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    mavenCentral()
    maven {
        name 'Unidata'
        url 'https://artifacts.unidata.ucar.edu/repository/unidata-releases/'
    }
    maven {
        url 'https://artifacts.glencoesoftware.com/artifactory/ome.releases'
    }
    maven {
        url 'https://artifacts.glencoesoftware.com/artifactory/ome.external'
    }
    maven {
        url 'https://artifacts.glencoesoftware.com/artifactory/scijava-thirdparty'
    }
    maven {
        url 'https://repo.glencoesoftware.com/repository/bioformats2raw2ometiff/'
    }
}

dependencies {
    api 'org.openmicroscopy:omero-blitz:5.8.3'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'dev.zarr:jzarr:0.4.2'
    implementation 'org.lasersonlab:s3fs:2.2.3'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.659'
    implementation 'org.apache.tika:tika-core:1.28.5'

    testImplementation 'info.picocli:picocli:4.7.5'
    testImplementation 'com.glencoesoftware:bioformats2raw:0.9.1'
}

test {
  useJUnit()
}

publishing {
    publications {
        omeroZarrPixelBuffer(MavenPublication) {
            from components.java
            pom {
                name = 'OMERO Zarr Pixel Buffer'
                licenses {
                    license {
                        name = 'GNU General Public License version 2'
                        url = 'http://www.gnu.org/licenses/gpl-2.0.txt'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url 'https://artifacts.glencoesoftware.com/artifactory/gs-omero-snapshots-local/'
            credentials {
               username = project.properties.ArtifactoryUserName
               password = project.properties.ArtifactoryPassword
            }
        }
    }
}

jar {
    manifest {
        attributes(
            "Created-By": "Gradle ${gradle.gradleVersion}",
            "Build-Jdk": "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            "Built-By": System.properties['user.name'],
            "Built-On": new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            "Implementation-Build": "git rev-parse --verify HEAD".execute().getText().trim(),
            "Implementation-Title": "OMERO Zarr Pixel Buffer",
            "Implementation-Version": archiveVersion,
            "Implementation-Vendor": "Glencoe Software Inc.",
        )
    }
}

// Create JAR with dependencies
task fatJar(type: Jar) {
    archiveClassifier.set('jar-with-dependencies')
    	zip64=true
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        def manifestAttributes = [
            "Created-By": "Gradle ${gradle.gradleVersion}",
            "Build-Jdk": "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            "Built-By": System.properties['user.name'],
            "Built-On": new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            "Implementation-Build": "git rev-parse --verify HEAD".execute().getText().trim(),
            "Implementation-Title": "OMERO Zarr Pixel Buffer",
            "Implementation-Version": archiveVersion,
            "Implementation-Vendor": "Glencoe Software Inc.",
        ]
		attributes(manifestAttributes)

        exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    }

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}